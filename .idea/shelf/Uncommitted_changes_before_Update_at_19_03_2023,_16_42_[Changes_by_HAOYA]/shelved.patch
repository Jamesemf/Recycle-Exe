Index: bytebrigade/bins/templates/bin_map.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'navbar.html' %}\n{% load static %}\n\n{% block title %} Scan Now! {% endblock %}\n\n{% block header%}\n<table id=\"BinTable\" style=\"display: none;\">\n    {% if presentButton %}\n    <tr>\n        <td>{{bin.binName}}</td>\n        <td>{{bin.binLat}}</td>\n        <td>{{bin.binLong}}</td>\n        <td>{{bin.bin_general}}</td>\n        <td>{{bin.bin_recycle}}</td>\n        <td>{{bin.bin_paper}}</td>\n        <td>{{bin.bin_cans}}</td>\n        <td>{{bin.bin_glass}}</td>\n        <td>{{bin.bin_plastic}}</td>\n        <td>{{bin.bin_non_rec}}</td>\n    </tr>\n    {% endif %}\n\n    {% if not presentButton %}\n    {% for bin in Bins %}\n    <tr>\n        <td>{{bin.binName}}</td>\n        <td>{{bin.binLat}}</td>\n        <td>{{bin.binLong}}</td>\n        <td>{{bin.bin_general}}</td>\n        <td>{{bin.bin_recycle}}</td>\n        <td>{{bin.bin_paper}}</td>\n        <td>{{bin.bin_cans}}</td>\n        <td>{{bin.bin_glass}}</td>\n        <td>{{bin.bin_plastic}}</td>\n        <td>{{bin.bin_non_rec}}</td>\n    </tr>\n    {% endfor %}\n    {% endif %}\n</table>\n\n{% endblock %}\n\n{% block content %}\n\n<style>\n    #map {\n        height: 400px;\n        width: 100%;\n    }\n</style>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-body d-flex\"><img>\n                    <p style=\"text-align: left;\">Welcome to the map page, below is a map of our campus with all bins dotted out. If you press one\n                    of the bins it will show you some information on it</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n\n                    <!--The div element for the map -->\n                    <div id=\"map\"></div>\n                    <select id=\"type\" onchange=filterMarkers(this.value)>\n\n                        <option value=\"\">Please select category</option>\n                        <option value=\"general\">General</option>\n                        <option value=\"recycle\">Recycle</option>\n                        <option value=\"paper\">Paper</option>\n                        <option value=\"cans\">Cans</option>\n                        <option value=\"glass\">Glass</option>\n                        <option value=\"plastic\">Plastic</option>\n                        <option value=\"non-recycle\">Non-Recycle</option>\n                    </select>\n                    <script\n                        src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCeauTIEx5Oz2I6sV3M7zdyqS1kZ074l3A&callback=initMap\"\n                        defer></script>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n{% if presentButton == 1 %}\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body d-lg-flex justify-content-lg-center\">\n            <form method=\"POST\">\n                <button class=\"btn btn-primary\" type=\"submit\">Would you like to start you adventure</button>\n                {% csrf_token %}\n            </form>\n        </div>\n    </div>\n</div>\n{% endif %}\n{% endblock %}\n\n{% block script %}\n<script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n<script src=\"{% static \" assets/bootstrap/js/bootstrap.min.js\" %}\"></script>\n\n<script>\n    let map, infoWindow;\n    var mapMarkers = [];\n    var dataMarkers = [];\n    /**\n      *\n      * This function initialises the google maps API object. It then iterates over a hidden table\n      * within the html containing information on each bin object retrieved from the back end. Each item in the\n      * table is then added to the map as a marker with an approproate name.\n      *\n      * The function also attempts to find your current position if avaiable and translate / scale the map so\n      * that your position can be seen.\n      *\n      */\n    function initMap() {\n        // The location of Exeter Forum\n        const exeter = { lat: 50.73547164859779, lng: -3.531442908528164 };\n        // The map, centered at Exeter Forum\n        const map = new google.maps.Map(document.getElementById(\"map\"), {\n            zoom: 14,\n            center: exeter,\n            mapTypeId: 'satellite'\n        });\n\n        //Retrieving information from the table and adding to an array\n        var table = document.getElementById(\"BinTable\");\n        var data = [];\n        for (var i = 0, row; row = table.rows[i]; i++) {\n            var item = [];\n            var available = [];\n            for (var j = 0, col; col = row.cells[j]; j++) {\n                if (j == 0) {\n                    item.push(col.innerText);\n                } else if (j == 1 || j == 2) {\n                    item.push(Number(col.innerText));\n                } else {\n                    if (col.innerText == \"True\") {\n                        switch (j) {\n                            case 3:\n                                available.push(\"general\");\n                                break;\n                            case 4:\n                                available.push(\"recycle\");\n                                break;\n                            case 5:\n                                available.push(\"paper\");\n                                break;\n                            case 6:\n                                available.push(\"cans\");\n                                break;\n                            case 7:\n                                available.push(\"glass\");\n                                break;\n                            case 8:\n                                available.push(\"plastic\");\n                                break;\n                            case 9:\n                                available.push(\"non-recycle\");\n                                break;\n                        }\n                    }\n                }\n            }\n            item.push(available);\n            data.push(item);\n        }\n\n        // Creating markers on the map\n        dataMarkers = data;\n        for (let i = 0; i < dataMarkers.length; i++) {\n            const marker = new google.maps.Marker({\n                position: { lat: dataMarkers[i][1], lng: dataMarkers[i][2] },\n                map: map,\n                category: dataMarkers[i][3],\n                title: dataMarkers[i][0]\n            });\n            mapMarkers.push(marker)\n            marker.addListener(\"click\", () => {\n                infoWindow.close();\n                const markerCategories = marker.category;\n                categoryText = \"\";\n                for(let i = 0; i < markerCategories.length; i++){\n                    categoryText = categoryText + \" \" + markerCategories[i] + \"<img src={% static 'figures/arrow.png' %}>\"\n                }\n                infoWindow.setContent(\"<p>\" + marker.getTitle() + \"<br />\" + categoryText+ \"</p>\" );\n                infoWindow.open(marker.getMap(), marker);\n            });\n        }\n        const locationButton = document.createElement(\"button\");\n        infoWindow = new google.maps.InfoWindow();\n        locationButton.textContent = \"Pan to Current Location\";\n        locationButton.classList.add(\"custom-map-control-button\");\n        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n        locationButton.addEventListener(\"click\", () => {\n\n            // Try HTML5 geolocation.\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const pos = {\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude,\n                        };\n\n                        infoWindow.setPosition(pos);\n                        infoWindow.setContent(\"Location found.\");\n                        infoWindow.open(map);\n                        map.setCenter(pos);\n                    },\n                    () => {\n                        handleLocationError(true, infoWindow, map.getCenter());\n                    }\n                );\n            } else {\n                // Browser doesn't support Geolocation\n                handleLocationError(false, infoWindow, map.getCenter());\n            }\n        });\n    }\n\n\n    /**\n     * This function handles any errors that occur when a browser does not support geolocation\n     * services\n     *\n     *\n     * */\n    function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n        infoWindow.setPosition(pos);\n        infoWindow.setContent(\n            browserHasGeolocation\n                ? \"Error: The Geolocation service failed.\"\n                : \"Error: Your browser doesn't support geolocation.\"\n        );\n        infoWindow.open(map);\n    }\n\n    /**\n     *\n     * This function filters the map markers based on a category selected on the html page. If a bin does not\n     * contain the same category then its marker is hidden from the user\n     *\n     */\n    function filterMarkers(category) {\n        for (i = 0; i < mapMarkers.length; i++) {\n            marker = mapMarkers[i];\n\n            // If is same category or category not picked\n            if ((typeof marker.category == 'object' && marker.category.indexOf(category) >= 0) || category.length == 0) {\n                marker.setVisible(true);\n            }\n            // Categories don't match\n            else {\n                marker.setVisible(false);\n            }\n        }\n    }\n\n    window.initMap = initMap;\n</script>\n\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bytebrigade/bins/templates/bin_map.html b/bytebrigade/bins/templates/bin_map.html
--- a/bytebrigade/bins/templates/bin_map.html	(revision ea3e92e43e4e2f55d73da6bbf228c1dceb4eca09)
+++ b/bytebrigade/bins/templates/bin_map.html	(date 1679241351065)
@@ -106,7 +106,7 @@
 
 {% block script %}
 <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
-<script src="{% static " assets/bootstrap/js/bootstrap.min.js" %}"></script>
+<script src="{% static "assets/bootstrap/js/bootstrap.min.js" %}"></script>
 
 <script>
     let map, infoWindow;
